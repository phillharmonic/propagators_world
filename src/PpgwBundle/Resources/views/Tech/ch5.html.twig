{% extends 'PpgwBundle::layout.html.twig' %}
{% block stylesheets %}
    {{parent()}}
    <link rel="stylesheet" href="{{asset('bundles/ppgw/css/symblog.css')}}" type="text/css" />
    <link rel="stylesheet" href="{{asset('bundles/ppgw/css/coding.css')}}" type="text/css" />
    <link rel="stylesheet" href="{{asset('bundles/ppgw/css/prism.css')}}" type="text/css" />
{% endblock%}
{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('bundles/ppgw/js/prism.js') }}"></script>
{%endblock %}
{% block title %}Propagators World - Symfony2 Index, Show, New, Edit, & Delete Actions{% endblock%}
{% block sidebar %}
    {% render controller("PpgwBundle:Tech:tableOfContents") %}
{% endblock %}
{% block body %}
    <div class="symblog">
    <div class="section-header"><h1>[ Chapter 5 ] - Index, Show, New, Edit, & Delete Actions</h1>
        <ul class="page-nav">
            <li><a href="#">Code Behind</a></li>
            <li><a href="#">Comment</a></li>
        </ul>
    </div>
    <div class="section" id="overview">
        <h2>Overview<a class="headerlink" href="#overview" title="Permalink to this headline">¶</a></h2>
        <div class='tech-body'>
            <p>
                One of the greatest teaching aids for me when I began teaching myself to code was the Jobeet 
                tutorial - way the hell back with the Symfony 1.4 version release.  Symfony has grown quite a bit since then
                and it has changed quite radically.  When I made the switch to Symfony2, it seemed like I was 
                starting all over from scratch; the transition was not seamless in any way.  So there I was, googling
                everything, searching forums, reading the cookbook - all for the seemingly most basic methods: like 
                the Index, New, Edit, Show, and Delete actions.  So, from what I've gathered, here then, is the 
                Symfony-2-Way of doing things:
            </p><p>
                Page Contents:
            </p>
            <ol class='arabic simple'>
                <li><a href="#index">Symfony2 Index Action</a></li>
                <li><a href="#new">Symfony2 New Action</a></li>
                <li><a href="#show">Symfony2 Show Action</a></li>
                <li><a href="#edit">Symfony2 Edit Action</a></li>
                <li><a href="#delete">Symfony2 Delete Action</a></li>
            </ol>
        </div>
    </div>
    <h2 id="index">Symfony2 Index Action<a class="headerlink" href="#Symfony2-Index-Action" title="Permalink to this headline">¶</a></h2>
     <div class='tech-body'>
        <p>
            
        </p>
     </div>
    <h3>The View<a class="headerlink" href="#the-view-plant" title="Permalink to this headline">¶</a></h3>
    <div class="highlight"><pre><code>
{{ twig_1|raw }}
    <code></pre></div>
    
    <h3>The Route<a class="headerlink" href="#the-route" title="Permalink to this headline">¶</a></h3>
    <p>
        
    </p>
    <div class="highlight"><pre><code class="language-yaml">
# src/PpgwBundle/Resources/config/routing.yml
PpgwBundle_plant_index:
    pattern:  /plant/index
    defaults: { _controller: PpgwBundle:Plant:index }
    requirements:
        _method:  GET     
    </code></pre></div>
    
    <h3>The Controller<a class="headerlink" href="#the-route" title="Permalink to this headline">¶</a></h3>
    <div class="highlight"><pre><code class="language-php">
&#60;?php
// src/PpgwBundle/Controller/PlantController.php

namespace PpgwBundle\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\Controller; 
use Symfony\Component\HttpFoundation\Request; 

class PlantController extends Controller
{
    //...
    public function indexAction(){
        //get your collection of plants:
        $em = $this->getDoctrine()->getEntityManager();        
        $plants = $em->getRepository('BloggerBlogBundle:Plant')->getLatestPlants();

        //send your collection to the view:
        return $this->render('BloggerBlogBundle:Plant:index.html.twig', array(
            'plants'    =>  $plants
        ));
    }
    //...
}
    </code></pre></div>
    
    <h3>The Model<a class="headerlink" href="#the-model" title="Permalink to this headline">¶</a></h3>
    <div class="highlight"><pre><code class="language-php">
&#60;?php
// src/PpgwBundle/Entity/Repository/PlantRepository.php

namespace PpgwBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository; 

class PlantRepository extends EntityRepository
{
    //...
    public function getLatestPlants(){
        $qb = $this->createQueryBuilder('p')
               ->select('p')
               ->addOrderBy('p.taxGenus', 'ASC')
                ->addOrderBy('p.taxSpecies', 'ASC')
                 ->addOrderBy('p.taxVariety', 'ASC');

                return $qb->getQuery()
                  ->getResult();
    }
    //...
}
    </code></pre></div>
    
    <h2 id="new">Symfony2 New Action<a class="headerlink" href="#alphabet_search" title="Permalink to this headline">¶</a></h2>
     <div class='tech-body'>
        <p>
        </p>
     </div>
    <h3>The View<a class="headerlink" href="#the-view" title="Permalink to this headline">¶</a></h3>
    <div class="highlight"><pre><code>
{{ twig_2|raw }}
    <code></pre></div>
    
    <h3>The Route<a class="headerlink" href="#the-route" title="Permalink to this headline">¶</a></h3>
    <div class="highlight"><pre><code class="language-yaml">
# src/PpgwBundle/Resources/config/routing.yml
PpgwBundle_plant_new:
    pattern:  /plant/new
    defaults: { _controller: PpgwBundle:Plant:new }
    requirements:
        _method:  GET|POST
    </code></pre></div>
    
    <h3>The Controller<a class="headerlink" href="#the-route" title="Permalink to this headline">¶</a></h3>
    <div class="highlight"><pre><code class="language-php">
&#60;?php

// src/PpgwBundle/Controller/PlantController.php

namespace PpgwBundle\Controller;

use PpgwBundle\Entity\Plant;
use PpgwBundle\Entity\Picture;
use PpgwBundle\Form\PlantForm;
use PpgwBundle\Form\BrowseCategoryForm;
use Doctrine\Common\Collections\ArrayCollection;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;

class PlantController extends Controller
{
    //...
    public function newAction(Request $request){
        $plant = new Plant();
        $image1 = new Picture();
        $plant->getPictures()->add($image1);

        //send the entity manager to the PlantForm - so we can assign default choices for related data:
        form = $this->createForm(new PlantForm($this->getDoctrine()->getManager()), $plant);

        if ($request->getMethod() == 'POST') {
            $form->handleRequest($request);
            if ($form->isValid()) {
                $em = $this->getDoctrine()->getEntityManager();
                $plant->setSlug($plant->getTaxGenus().' '.$plant->getTaxSpecies().' '.$plant->getTaxVariety().' '.$plant->getTaxName() );
                !isset($image1)?:$em->persist($image1);
                $em->persist($plant);
                $em->flush();

                // Redirect - This is important to prevent users re-posting
                // the form if they refresh the page
                return $this->redirect($this->generateUrl('BloggerBlogBundle_plant_show', array(
                    'id'     =>   $plant->getId(),
                    'slug'   =>   $plant->getSlug()
                )));
        }  

        return $this->render('BloggerBlogBundle:Plant:new.html.twig' , array(
            'form' => $form->createView()
        ));
    }
    //...
}
    </code></pre></div>
    
    <h3>The Model<a class="headerlink" href="#the-model" title="Permalink to this headline">¶</a></h3>
    <div class="highlight"><pre><code class="language-php">
{{ php_1|raw }}
    </code></pre></div>
    
    <h3>The Form<a class="headerlink" href="#the-form" title="Permalink to this headline">¶</a></h3>
    <div class="highlight"><pre><code class="language-php">
{{ php_2|raw }}
    </code></pre></div>
    
    <h2 id="show">Symfony2 Show Action<a class="headerlink" href="#keyword_search" title="Permalink to this headline">¶</a></h2>
     <div class='tech-body'>
        <p>
            The working example can be found <a class="reference internal" href="{{path('PpgwBundle_plant_show', { 'id': plant.id, 'slug': plant.slug })}}">here</a>.
        </p>
     </div>
    <h3>The View<a class="headerlink" href="#the-view" title="Permalink to this headline">¶</a></h3>
    <div class="highlight"><pre><code>
{{ twig_3|raw }}
    </code></pre></div>

    <h3>The Route<a class="headerlink" href="#the-route" title="Permalink to this headline">¶</a></h3>
    <div class="highlight"><pre><code class="language-yaml">    
# src/PpgwBundle/Resources/config/routing.yml
PpgwBundle_plant_show:
    pattern:  /plant/show/{id}/{slug}
    defaults: { _controller: PpgwBundle:Plant:show }
    requirements:
        _method:  GET    
        id: \d+   
    </code></pre></div>  
    
    <h3>The Controller<a class="headerlink" href="#the-route" title="Permalink to this headline">¶</a></h3>
    <div class="highlight"><pre><code class="language-php">
{{ php_3|raw }}
    </code></pre></div>    
    
    
    <h3>The Model<a class="headerlink" href="#the-model" title="Permalink to this headline">¶</a></h3>
    <div class='tech-body'>
        <p>
            My controller actually calls several methods defined in the Plant repository, but I'm only going
            to demonstrate one of them - the getDiseasesStr() .  The others are all variations of this method:
        </p>
     </div>
    
    <div class="highlight"><pre><code class="language-php">
&#60;?php
// src/PpgwBundle/Entity/Repository/PlantRepository.php

namespace PpgwBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository; 

class PlantRepository extends EntityRepository
{
    //...
    public function getDiseasesStr($plant){
        $ar = array();
        $string = '';
        $diseases = $plant->getDiseases();
        foreach($diseases as $disease){
            $ar[] = $disease->getName();
        }
        //return a formated string
        foreach($ar as $var){
            $string .= $var.', ';
        }
        return substr($string, 0, -2);
    }
    //...
}
    </code></pre></div>        
    
    <h2 id="edit">Symfony2 Edit Action<a class="headerlink" href="#symfony-2-edit-action" title="Permalink to this headline">¶</a></h2>
    <div class='tech-body'>
        <p>
            The Edit Action is almost exactly the same as the New Action, with a few exceptions.  The exceptions
            are demonstrated below.  Note: there is a more conscise way to combine the New and Edit actions to 
            reduce the amount of code and re-writing.  But if there are significant changes in the way these two 
            actions are performed, it is best practice to write seperate views and actions.  
        </p>
     </div>
    <h3>The View<a class="headerlink" href="#the-view" title="Permalink to this headline">¶</a></h3>
    
<div class="highlight"><pre><code>
{{ twig_4|raw }}
</code></pre></div>
    
    <h3>The Route<a class="headerlink" href="#the-route" title="Permalink to this headline">¶</a></h3>
<div class="highlight"><pre><code class="language-yaml">  
# src/PpgwBundle/Resources/config/routing.yml
PpgwBundle_plant_edit:
    pattern:  /plant/edit/{id}
    defaults: { _controller: PpgwBundle:Plant:edit }
    requirements:
        _method:  GET|POST
        id: \d+
</code></pre></div>
    
    <h3>The Controller<a class="headerlink" href="#the-route" title="Permalink to this headline">¶</a></h3>
    <div class="highlight"><pre><code class="language-php">
{{ php_4|raw }}
    </code></pre></div>  
    
    <div class='tech-body'>
        <p>
            The model for the Edit action is the same as the New action.  
        </p>
     </div>
    
    <h2 id="delete">Symfony2 Delete Action<a class="headerlink" href="#symfony-2-delete-action" title="Permalink to this headline">¶</a></h2>
    
</div>
{% endblock %}